# Emre Ge√ßit
# 2521581

.pos 0
    irmovq Stack, %rsp
    irmovq ele0, %rdi
    irmovq $3, %rsi # k
    call kth_ll
    halt

kth_ll:
    jmp check
loop:
    irmovq $1, %rdx
    subq %rdx, %rsi
    jne not_zero
    mrmovq (%rdi), %rax
    ret
not_zero:
    mrmovq 8(%rdi), %rdi
check:
    andq %rdi, %rdi
    jne loop
    ret

# absolutely positioned here to debug addresses more easily.
.pos 0x200
ele0:
    .quad 0x0005
    .quad ele2
ele1:
    .quad 0x000c
    .quad ele2
ele2:
    .quad 0x0010
    .quad ele3
ele3:
    .quad 0x001a
    .quad ele4
ele4:
    .quad 0x0030
    .quad ele5
ele5:
    .quad 0x0045
    .quad ele6
ele6:
    .quad 0x005e
    .quad 0 # Remember that 0 is null.

.pos 0x300
Stack:
