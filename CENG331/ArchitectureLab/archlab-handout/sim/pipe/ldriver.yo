                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f45806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6d803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7d001000000000000 | 	irmovq src, %rdi	# src array
                            |     # corrupt all the unused registers to prevent assumptions
0x028: 30f03103710500000000 |     irmovq $0x5710331, %rax
0x032: 30f33103710500000000 |     irmovq $0x5710331, %rbx
0x03c: 30f13103710500000000 |     irmovq $0x5710331, %rcx
0x046: 30f53103710500000000 |     irmovq $0x5710331, %rbp
0x050: 30f83103710500000000 |     irmovq $0x5710331, %r8
0x05a: 30f93103710500000000 |     irmovq $0x5710331, %r9
0x064: 30fa3103710500000000 |     irmovq $0x5710331, %r10
0x06e: 30fb3103710500000000 |     irmovq $0x5710331, %r11
0x078: 30fc3103710500000000 |     irmovq $0x5710331, %r12
0x082: 30fd3103710500000000 |     irmovq $0x5710331, %r13
0x08c: 30fe3103710500000000 |     irmovq $0x5710331, %r14
0x096: 80a000000000000000   | 	call abscopy		 
0x09f: 00                   | 	halt			# should halt with abs sum in %rax
0x0a0:                      | StartFun:
                            | #/* $begin abscopy-ys */
                            | ##################################################################
                            | # abscopy.ys - copy the absolute values of a src block of n words to dst.
                            | # Return the sum of copied (absolute) values.
                            | #
                            | # name: Emre GeÃ§it
                            | # id: 2521581
                            | 
                            | # I have tried different configurations for loop unrolling.
                            | # Best performance is achieved with 2 loops.
                            | 
                            | # I used 3 different registers to improve the pipeline.
                            | 
                            | # I used the following three lines in order to improve performance during taking the absolute value.
                            | #        xorq %r12, %r12         # %r12 = 0
                            | #        subq %r10, %r12         # %r12 = -%r10
                            | #        cmovg %r12, %r10        # if %r12 > 0, %r10 = -%r10 
                            | 
                            | # I removed and reordered some instructions in order to improve performance.
                            | 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = n
0x0a0:                      | abscopy:
                            | ##################################################################
                            | # You can modify this portion
                            | 
0x0a0: 30f80600000000000000 |         irmovq $6, %r8  
0x0aa: 30fe3000000000000000 |         irmovq $48, %r14
0x0b4: 6300                 |         xorq %rax,%rax  
0x0b6: d0f80000000000000000 |         isubq $0, %r8
0x0c0: 6182                 |         subq %r8, %rdx  
0x0c2: 728201000000000000   |         jl Remaining    
                            | 
0x0cb:                      | Loop:
0x0cb: 50a70000000000000000 |         mrmovq (%rdi), %r10  
0x0d5: 50b70800000000000000 |         mrmovq 8(%rdi), %r11 
0x0df: 50571000000000000000 |         mrmovq 16(%rdi), %rbp
0x0e9: 63cc                 |         xorq %r12, %r12      
0x0eb: 63dd                 |         xorq %r13, %r13      
0x0ed: 6311                 |         xorq %rcx, %rcx      
0x0ef: 61ac                 |         subq %r10, %r12      
0x0f1: 26ca                 |         cmovg %r12, %r10     
0x0f3: 61bd                 |         subq %r11, %r13      
0x0f5: 26db                 |         cmovg %r13, %r11     
0x0f7: 6151                 |         subq %rbp, %rcx      
0x0f9: 2615                 |         cmovg %rcx, %rbp     
0x0fb: 60a0                 |         addq %r10, %rax      
0x0fd: 60b0                 |         addq %r11, %rax      
0x0ff: 6050                 |         addq %rbp, %rax      
0x101: 40a60000000000000000 |         rmmovq %r10, (%rsi)  
0x10b: 40b60800000000000000 |         rmmovq %r11, 8(%rsi) 
0x115: 40561000000000000000 |         rmmovq %rbp, 16(%rsi)
                            | 
0x11f: 50a71800000000000000 |         mrmovq 24(%rdi), %r10
0x129: 50b72000000000000000 |         mrmovq 32(%rdi), %r11
0x133: 50572800000000000000 |         mrmovq 40(%rdi), %rbp
0x13d: 63cc                 |         xorq %r12, %r12      
0x13f: 63dd                 |         xorq %r13, %r13      
0x141: 6311                 |         xorq %rcx, %rcx      
0x143: 61ac                 |         subq %r10, %r12      
0x145: 26ca                 |         cmovg %r12, %r10     
0x147: 61bd                 |         subq %r11, %r13      
0x149: 26db                 |         cmovg %r13, %r11     
0x14b: 6151                 |         subq %rbp, %rcx      
0x14d: 2615                 |         cmovg %rcx, %rbp     
0x14f: 60a0                 |         addq %r10, %rax      
0x151: 60b0                 |         addq %r11, %rax      
0x153: 6050                 |         addq %rbp, %rax      
0x155: 40a61800000000000000 |         rmmovq %r10, 24(%rsi)
0x15f: 40b62000000000000000 |         rmmovq %r11, 32(%rsi)
0x169: 40562800000000000000 |         rmmovq %rbp, 40(%rsi)
                            |         
0x173: 60e6                 |         addq %r14, %rsi    
0x175: 60e7                 |         addq %r14, %rdi    
0x177: 6182                 |         subq %r8, %rdx     
0x179: 75cb00000000000000   |         jge Loop           
                            | 
0x182:                      | Remaining:
0x182: 6082                 |         addq %r8, %rdx     
0x184: 30f80100000000000000 |         irmovq $1, %r8     
0x18e: 30fe0800000000000000 |         irmovq $8, %r14    
0x198: 73cc01000000000000   |         je Done            
0x1a1:                      | Loop2:
0x1a1: 50a70000000000000000 |         mrmovq (%rdi), %r10
0x1ab: 63cc                 |         xorq %r12, %r12    
0x1ad: 61ac                 |         subq %r10, %r12    
0x1af: 26ca                 |         cmovg %r12, %r10   
0x1b1: 60a0                 |         addq %r10, %rax    
0x1b3: 40a60000000000000000 |         rmmovq %r10, (%rsi)
0x1bd: 60e6                 |         addq %r14, %rsi    
0x1bf: 60e7                 |         addq %r14, %rdi    
0x1c1: 6182                 |         subq %r8, %rdx     
0x1c3: 76a101000000000000   |         jg Loop2           
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1cc:                      | Done:
0x1cc: 90                   |         ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1cd:                      | End:
                            | #/* $end abscopy-ys */
0x1cd:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1d0:                      | 	.align 8
0x1d0:                      | src:
0x1d0: ffffffffffffffff     | 	.quad -1
0x1d8: 0200000000000000     | 	.quad 2
0x1e0: fdffffffffffffff     | 	.quad -3
0x1e8: 0400000000000000     | 	.quad 4
0x1f0: fbffffffffffffff     | 	.quad -5
0x1f8: 0600000000000000     | 	.quad 6
0x200: 0700000000000000     | 	.quad 7
0x208: f8ffffffffffffff     | 	.quad -8
0x210: 0900000000000000     | 	.quad 9
0x218: 0a00000000000000     | 	.quad 10
0x220: f5ffffffffffffff     | 	.quad -11
0x228: f4ffffffffffffff     | 	.quad -12
0x230: f3ffffffffffffff     | 	.quad -13
0x238: 0e00000000000000     | 	.quad 14
0x240: f1ffffffffffffff     | 	.quad -15
0x248: 1000000000000000     | 	.quad 16
0x250: efffffffffffffff     | 	.quad -17
0x258: eeffffffffffffff     | 	.quad -18
0x260: edffffffffffffff     | 	.quad -19
0x268: ecffffffffffffff     | 	.quad -20
0x270: ebffffffffffffff     | 	.quad -21
0x278: eaffffffffffffff     | 	.quad -22
0x280: e9ffffffffffffff     | 	.quad -23
0x288: 1800000000000000     | 	.quad 24
0x290: 1900000000000000     | 	.quad 25
0x298: 1a00000000000000     | 	.quad 26
0x2a0: 1b00000000000000     | 	.quad 27
0x2a8: 1c00000000000000     | 	.quad 28
0x2b0: 1d00000000000000     | 	.quad 29
0x2b8: 1e00000000000000     | 	.quad 30
0x2c0: e1ffffffffffffff     | 	.quad -31
0x2c8: 2000000000000000     | 	.quad 32
0x2d0: 2100000000000000     | 	.quad 33
0x2d8: deffffffffffffff     | 	.quad -34
0x2e0: ddffffffffffffff     | 	.quad -35
0x2e8: 2400000000000000     | 	.quad 36
0x2f0: dbffffffffffffff     | 	.quad -37
0x2f8: daffffffffffffff     | 	.quad -38
0x300: 2700000000000000     | 	.quad 39
0x308: d8ffffffffffffff     | 	.quad -40
0x310: d7ffffffffffffff     | 	.quad -41
0x318: d6ffffffffffffff     | 	.quad -42
0x320: d5ffffffffffffff     | 	.quad -43
0x328: 2c00000000000000     | 	.quad 44
0x330: d3ffffffffffffff     | 	.quad -45
0x338: d2ffffffffffffff     | 	.quad -46
0x340: d1ffffffffffffff     | 	.quad -47
0x348: 3000000000000000     | 	.quad 48
0x350: 3100000000000000     | 	.quad 49
0x358: 3200000000000000     | 	.quad 50
0x360: 3300000000000000     | 	.quad 51
0x368: ccffffffffffffff     | 	.quad -52
0x370: cbffffffffffffff     | 	.quad -53
0x378: 3600000000000000     | 	.quad 54
0x380: 3700000000000000     | 	.quad 55
0x388: c8ffffffffffffff     | 	.quad -56
0x390: c7ffffffffffffff     | 	.quad -57
0x398: c6ffffffffffffff     | 	.quad -58
0x3a0: 3b00000000000000     | 	.quad 59
0x3a8: 3c00000000000000     | 	.quad 60
0x3b0: 3d00000000000000     | 	.quad 61
0x3b8: 3e00000000000000     | 	.quad 62
0x3c0: 3f00000000000000     | 	.quad 63
0x3c8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3d0:                      | 	.align 16
0x3d0:                      | Predest:
0x3d0: fadebc0000000000     | 	.quad 0xbcdefa
0x3d8:                      | dest:
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0:                      | Postdest:
0x5d0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x5d8:                      | .align 8
                            | # Run time stack
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
0x608: 0000000000000000     | 	.quad 0
0x610: 0000000000000000     | 	.quad 0
0x618: 0000000000000000     | 	.quad 0
0x620: 0000000000000000     | 	.quad 0
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
0x650: 0000000000000000     | 	.quad 0
                            | 
0x658:                      | Stack:
