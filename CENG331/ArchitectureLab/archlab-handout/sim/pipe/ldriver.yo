                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f48805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f60803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f70001000000000000 | 	irmovq src, %rdi	# src array
                            |     # corrupt all the unused registers to prevent assumptions
0x028: 30f03103710500000000 |     irmovq $0x5710331, %rax
0x032: 30f33103710500000000 |     irmovq $0x5710331, %rbx
0x03c: 30f13103710500000000 |     irmovq $0x5710331, %rcx
0x046: 30f53103710500000000 |     irmovq $0x5710331, %rbp
0x050: 30f83103710500000000 |     irmovq $0x5710331, %r8
0x05a: 30f93103710500000000 |     irmovq $0x5710331, %r9
0x064: 30fa3103710500000000 |     irmovq $0x5710331, %r10
0x06e: 30fb3103710500000000 |     irmovq $0x5710331, %r11
0x078: 30fc3103710500000000 |     irmovq $0x5710331, %r12
0x082: 30fd3103710500000000 |     irmovq $0x5710331, %r13
0x08c: 30fe3103710500000000 |     irmovq $0x5710331, %r14
0x096: 80a000000000000000   | 	call abscopy		 
0x09f: 00                   | 	halt			# should halt with abs sum in %rax
0x0a0:                      | StartFun:
                            | #/* $begin abscopy-ys */
                            | ##################################################################
                            | # abscopy.ys - copy the absolute values of a src block of n words to dst.
                            | # Return the sum of copied (absolute) values.
                            | #
                            | # Include your name and ID here.
                            | # Describe how and why you modified the baseline code.
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = n
0x0a0:                      | abscopy:
                            | ##################################################################
                            | # You can modify this portion
                            |         # Loop header
0x0a0: 6300                 |         xorq %rax,%rax          # sum = 0;
0x0a2: 6222                 |         andq %rdx,%rdx          # n <= 0?
0x0a4: 71f900000000000000   |         jle Done                # if so, goto Done:
                            | 
0x0ad:                      | Loop:   
0x0ad: 50a70000000000000000 |         mrmovq (%rdi), %r10     # read val from src...
0x0b7: 62aa                 |         andq %r10, %r10         # val >= 0?
0x0b9: 75c800000000000000   |         jge Positive            # if so, skip negating
0x0c2: 20a9                 |         rrmovq %r10, %r9        # temporary move
0x0c4: 63aa                 |         xorq %r10, %r10         # zero r10
0x0c6: 619a                 |         subq %r9, %r10          # negation achieved!
0x0c8:                      | Positive:
0x0c8: 60a0                 |         addq %r10, %rax         # sum += absval   
0x0ca: 40a60000000000000000 |         rmmovq %r10, (%rsi)     # ...and store it to dst
0x0d4: 30fa0100000000000000 |         irmovq $1, %r10
0x0de: 61a2                 |         subq %r10, %rdx         # n--
0x0e0: 30fa0800000000000000 |         irmovq $8, %r10
0x0ea: 60a6                 |         addq %r10, %rsi         # dst++
0x0ec: 60a7                 |         addq %r10, %rdi         # src++
0x0ee: 6222                 |         andq %rdx,%rdx          # n > 0?
0x0f0: 76ad00000000000000   |         jg Loop                 # if so, goto Loop:
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0f9:                      | Done:
0x0f9: 90                   |         ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0fa:                      | End:
                            | #/* $end abscopy-ys */
0x0fa:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x100:                      | 	.align 8
0x100:                      | src:
0x100: 0100000000000000     | 	.quad 1
0x108: 0200000000000000     | 	.quad 2
0x110: 0300000000000000     | 	.quad 3
0x118: fcffffffffffffff     | 	.quad -4
0x120: fbffffffffffffff     | 	.quad -5
0x128: faffffffffffffff     | 	.quad -6
0x130: 0700000000000000     | 	.quad 7
0x138: f8ffffffffffffff     | 	.quad -8
0x140: 0900000000000000     | 	.quad 9
0x148: 0a00000000000000     | 	.quad 10
0x150: f5ffffffffffffff     | 	.quad -11
0x158: 0c00000000000000     | 	.quad 12
0x160: f3ffffffffffffff     | 	.quad -13
0x168: 0e00000000000000     | 	.quad 14
0x170: f1ffffffffffffff     | 	.quad -15
0x178: f0ffffffffffffff     | 	.quad -16
0x180: efffffffffffffff     | 	.quad -17
0x188: 1200000000000000     | 	.quad 18
0x190: edffffffffffffff     | 	.quad -19
0x198: ecffffffffffffff     | 	.quad -20
0x1a0: ebffffffffffffff     | 	.quad -21
0x1a8: eaffffffffffffff     | 	.quad -22
0x1b0: e9ffffffffffffff     | 	.quad -23
0x1b8: e8ffffffffffffff     | 	.quad -24
0x1c0: e7ffffffffffffff     | 	.quad -25
0x1c8: e6ffffffffffffff     | 	.quad -26
0x1d0: 1b00000000000000     | 	.quad 27
0x1d8: 1c00000000000000     | 	.quad 28
0x1e0: 1d00000000000000     | 	.quad 29
0x1e8: 1e00000000000000     | 	.quad 30
0x1f0: e1ffffffffffffff     | 	.quad -31
0x1f8: 2000000000000000     | 	.quad 32
0x200: 2100000000000000     | 	.quad 33
0x208: deffffffffffffff     | 	.quad -34
0x210: ddffffffffffffff     | 	.quad -35
0x218: dcffffffffffffff     | 	.quad -36
0x220: 2500000000000000     | 	.quad 37
0x228: daffffffffffffff     | 	.quad -38
0x230: 2700000000000000     | 	.quad 39
0x238: d8ffffffffffffff     | 	.quad -40
0x240: 2900000000000000     | 	.quad 41
0x248: 2a00000000000000     | 	.quad 42
0x250: d5ffffffffffffff     | 	.quad -43
0x258: d4ffffffffffffff     | 	.quad -44
0x260: 2d00000000000000     | 	.quad 45
0x268: d2ffffffffffffff     | 	.quad -46
0x270: d1ffffffffffffff     | 	.quad -47
0x278: 3000000000000000     | 	.quad 48
0x280: cfffffffffffffff     | 	.quad -49
0x288: ceffffffffffffff     | 	.quad -50
0x290: cdffffffffffffff     | 	.quad -51
0x298: 3400000000000000     | 	.quad 52
0x2a0: 3500000000000000     | 	.quad 53
0x2a8: caffffffffffffff     | 	.quad -54
0x2b0: c9ffffffffffffff     | 	.quad -55
0x2b8: 3800000000000000     | 	.quad 56
0x2c0: 3900000000000000     | 	.quad 57
0x2c8: 3a00000000000000     | 	.quad 58
0x2d0: 3b00000000000000     | 	.quad 59
0x2d8: 3c00000000000000     | 	.quad 60
0x2e0: 3d00000000000000     | 	.quad 61
0x2e8: 3e00000000000000     | 	.quad 62
0x2f0: 3f00000000000000     | 	.quad 63
0x2f8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x300:                      | 	.align 16
0x300:                      | Predest:
0x300: fadebc0000000000     | 	.quad 0xbcdefa
0x308:                      | dest:
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500:                      | Postdest:
0x500: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x508:                      | .align 8
                            | # Run time stack
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
                            | 
0x588:                      | Stack:
