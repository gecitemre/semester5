.pos 0
    irmovq Stack, %rsp
    irmovq root, %rdi
    irmovq k, %rsi
    call kth_bst
    halt

kth_bst:
    andq %rdi, %rdi
    je return
    pushq %rdi
    mrmovq 8(%rdi), %rdi
    call kth_bst
    popq %rdi
    mrmovq (%rsi), %rdx
    irmovq $1, %rcx
    subq %rcx, %rdx
    jge gt0
    ret
gt0:
    rmmovq %rdx, (%rsi)
    je recurse_right
    mrmovq (%rdi), %rax
    ret
recurse_right:
    mrmovq 16(%rdi), %rdi
    call kth_bst
    ret
return:
    irmovq $-1, %rax
    ret

.pos 0x200
root:
.quad 17
.quad node6
.quad node24
node6:
.quad 6
.quad node4
.quad node11
node4:
.quad 4
.quad node3
.quad node5
node3:
.quad 3
.quad 0
.quad 0
node5:
.quad 5
.quad 0 # Remember that 0 is null.
.quad 0
node11:
.quad 11
.quad node8
.quad 0
node8:
.quad 8
.quad 0
.quad 0
node24:
.quad 24
.quad node19
.quad node40
node19:
.quad 19
.quad 0
.quad 0
node40:
.quad 40
.quad 0
.quad node52
node52:
.quad 52
.quad 0
.quad 0

k:
.quad 7

.pos 0x400
Stack:
